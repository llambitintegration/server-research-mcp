# Task Configuration for Server Research MCP Crew
# Enhanced with structured output specifications

context_gathering_task:
  description: >
    Gather and enrich context for the research query: {topic}.
    Search existing knowledge base for related papers, authors, and topic context.
    Expand search terms and develop a comprehensive search strategy.
    Create memory entities for new information discovered.
  expected_output: >
    A structured enriched query object containing:
    - Original query and expanded search terms
    - Related papers from memory with titles and relevance
    - Known authors in the field with their affiliations
    - Topic context and domain knowledge
    - Recommended search strategy
    - Memory entities created or updated
  agent: historian
  # Enable structured output with schema validation
  output_json_schema: "EnrichedQuery"

paper_extraction_task:
  description: >
    Search for and extract comprehensive data about: {topic}.
    Use Zotero tools to find relevant academic papers.
    Extract full metadata, abstracts, and full-text content when available.
    Include paper sections, references, and any annotations.
    Assess extraction quality and completeness.
  expected_output: >
    Raw paper data including:
    - Complete metadata (title, authors, journal, DOI, etc.)
    - Full-text content with section organization
    - Reference list and citation information
    - Figures and tables metadata
    - Extraction quality metrics
    - Zotero item key for reference
  agent: researcher
  # Enable structured output with schema validation
  output_json_schema: "RawPaperData"

analysis_and_structuring_task:
  description: >
    Analyze and structure the raw paper data from the previous task.
    Use sequential thinking to break down the content systematically.
    Extract key findings, contributions, and limitations.
    Structure the information according to academic paper standards.
    Validate against the research paper schema.
  expected_output: >
    A fully structured research paper object with:
    - Validated metadata with proper author objects
    - Organized sections with summaries and key points
    - Processed references with citation analysis
    - Extracted key findings and contributions
    - Identified limitations and future work suggestions
    - Quality metrics and validation status
  agent: archivist
  # Enable structured output with schema validation
  output_json_schema: "ResearchPaperSchema"

publishing_task:
  description: >
    Generate publication-ready documents from the structured paper data.
    Create both Obsidian markdown with frontmatter and standalone markdown.
    Use filesystem tools to write files to the Obsidian vault.
    Generate proper cross-references and knowledge graph connections.
    Include metadata for vault integration and discoverability.
  expected_output: >
    Published documents including:
    - Obsidian markdown file with structured frontmatter
    - Standalone markdown with academic formatting
    - Knowledge graph connections and backlinks
    - File paths and vault integration status
    - Publishing metadata and timestamps
  agent: publisher
  # Enable structured output with schema validation
  output_json_schema: "ObsidianDocument"

# Additional configuration for schema validation
schema_validation:
  strict_mode: false  # Allow minor deviations for flexibility
  retry_on_failure: true
  max_retries: 2
  provide_feedback: true

output_formats:
  EnrichedQuery:
    model: "server_research_mcp.schemas.research_paper.EnrichedQuery"
    validation_level: "medium"
  RawPaperData:
    model: "server_research_mcp.schemas.research_paper.RawPaperData"
    validation_level: "medium" 
  ResearchPaperSchema:
    model: "server_research_mcp.schemas.research_paper.ResearchPaperSchema"
    validation_level: "high"
  ObsidianDocument:
    model: "server_research_mcp.schemas.obsidian_meta.ObsidianDocument"
    validation_level: "high"
